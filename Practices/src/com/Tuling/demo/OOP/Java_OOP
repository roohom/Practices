#Java_OOP
> Object Oriented Programming

## 面向对象是基于面向过程的编程思想
    - 面向过程:强调的是每一个功能步骤
    - 面向对象:强调的是对象，然后由对象去调用功能

## 特征
    - 封装
    - 继承
    - 多态    
        
## Java中最基础的单位是类，类是Java中最基础的单位    
### 类
- 类就是一组相关的属性和行为的集合  
- 对象:是该类事物的具体表现形式，具体存在的个体  
    - 定义格式
    ~~~
    class 类名{
        类体;
    }
    ~~~
     > 当类名由多个单词组成的时候，要求每个单词的首字母大小，也就是大驼峰命名法
- 对象
    - 对象(Object)是类的实例                                     
    - 对象的创建称之为类的实例化
        - 语法
        new 类名;
        例如:new Person(); - 匿名对象
        
        - 使用方式
        对象创建的行的是叫做类的实例化，而串讲对象的本质就是在内存空间中的
        地区申请一块空间，用于记录该对象拥有的成员变量的信息。
### 引用的使用
使用引用数据类型声明的变量叫做引用类型变量，简称为“引用”

    1.<语法格式>
    类名 引用名称;
    Person p;
    2.<使用方式>
    引用变量通常用于记录创建对象在堆区中的内存地址信息，从而可以方便地使用
    该对象以及该对象中的成员变量信息，具体:  
    引用名.成员变量名;  
    如:
    Person p = new Person();
    p.name = '白菜';
    p.age = 18;
    
### 成员方法
类中可以定义成员变量和成员方法
- 返回值类型:是指从方法体中向方法体外返回的数据类型
- 形参列表:形式参数主要指从方法体外向方法体内传入数据内容，通过使用变量的声明来传入
    - 格式 -> 数据类型形参变量名
- 成员方法体
成员方法体通过用于编写描述该方法功能的语句块，也就是对多条语句的打包/包装。

- 调用  
    - 格式:引用/对象.成员方法名(实参列表)
    - 使用方法:实参列表主要用于给形式参数了表初始化，因此参数的**个数、类型以及顺序**都必须相同
    实参可以传递直接量、变量，表达式以及方法的调用等.
